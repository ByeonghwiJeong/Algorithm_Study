/*
< 영역구하기 >
https://www.acmicpc.net/problem/2828
문제
- 바구니 옮기기 게임
- 스크린은 N칸으로 나누어져 있다.
- 스크린의 아래쪽에는 M칸을 차지하는 바구니가 있다.
- M < N
- 게임을 하는중에 바구니를 왼쪽||오른쪽 이동가능
- 바구니는 스크린의 경계를 넘어가면 안된다.
- 가장 처음에 바구니는 왼쪽 M칸을 차지하고 있다.

- 스크린의 위에서 사과 여러개가 떨어진다.
- 각 사과는 N칸중 한 칸의 상단에서 떨어지기 시작
- 스크린의 바닥에 닿을때까지 직선으로 떨어진다.
- 한사과가 바닥에 땋는즉시 다른사과가 떨어짐

- 바구니가 사과가 떨어지는 칸을 차지하고 있다면
- 바구니는 그 사과가 바닥에 닿을 때, 사과를 담을 수 있다.
- 상근이는 사과를 모두 담으려고 한다.
이때, 바구니의 이동거리의 최솟값
입력
- 첫째줄 : N, M ~ [1 \ 10], N < M
- 둘째줄 : 떨어지는 사과의 개수 J ~ [1 \ 20]
- 셋째줄[J] : 사과가 떨어지는 위치 순서대로
*/
#include<bits/stdc++.h>
using namespace std;
int n, m, j, l, r, temp, ret;
int main(){
    cin >> n >> m >> j;
    l = 1; // 처음 왼쪽 위치 
    for(int i = 0; i < j; i++){
        r = l + m - 1; // m크기 바구니 맨 오른쪽 위치
        cin >> temp;
        if(temp >= l && temp <= r) continue; // in 바구니
        else{ // out 바구니
            if(temp < l){ // 바구니 왼쪽
                ret += (l - temp);
                l = temp;
            }else{ // 바구니 오른쪽
                ret += temp - r;
                l = l + temp - r;
            }
        }
    }
    cout << ret << "\n";
    return 0;
}
/*
구현 문제
*/
