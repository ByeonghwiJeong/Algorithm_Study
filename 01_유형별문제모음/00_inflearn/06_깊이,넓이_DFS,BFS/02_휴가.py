'''
카운셀러 현수는 오늘부터 N+1일째 되는 날 휴가를 가기 위해서, 
남은 N일 동안 최대한 많은 상담한다.
회사에 하루에 하나씩 서로 다른 사람의 상담이 예약
각각의 상담은 상담을 완료하는데 걸리는 날수 T
상담을 했을 때 받을 수 있는 금액 P
만약 N = 7이고, 아래와 같이 예약이 잡혔있다면

 1일 2일 3일 4일 5일 6일 7일
T 4  2   3   3   2   2   1
P 20 10  15  20  30  20  10

1일에 잡혀있는 상담은 총 4일이 걸리며, 상담했을 때 받을 수 있는 금액은 20이다. 만약 1일
에 예약된 상담을 하면 4일까지는 상담을 할 수가 없다.
하나의 상담이 하루를 넘어가는 경우가 많기 때문에 현수는 예약된 모든 상담을 혼자 할 수
없어 최대 이익이 나는 상담 스케쥴을 짜기로 했다.
휴가를 떠나기 전에 할 수 있는 상담의 최대 이익은 1일, 5일, 7일에 있는 상담을 하는 것이
며, 이때의 이익은 20+30+10=60이다.
현수가 휴가를 가기 위해 얻을 수 있는 최대 수익을 구하는 프로그램을 작성하시오.

▣ 입력설명
첫째 줄에 N (1 ≤ N ≤ 15)이 주어진다.
둘째 줄부터 1일부터 N일까지 순서대로 주어진다. (1 ≤ T ≤ 7, 1 ≤ P ≤ 100)
7
4 20
2 10
3 15
3 20
2 30
2 20
1 10
▣ 출력설명
첫째 줄에 현수가 얻을 수 있는 최대 이익을 출력한다.
60
'''
import sys

def dfs(L, sum):
    global res
    if L == n + 1:
        if sum > res:
            res = sum
    else:
        if L + T[L] <= n + 1:
            dfs(L + T[L], sum + P[L]) # 상담 O
        dfs(L + 1, sum) # 상담 X


n = int(input())
T = [0]
P = [0]
for i in range(n):
    a, b = map(int, input().split())
    T.append(a)
    P.append(b)
res = -214000000
dfs(1, 0)
print(res)
